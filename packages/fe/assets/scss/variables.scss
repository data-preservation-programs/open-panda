////////////////////////////////////////////////////////////////////// Variables
// -----------------------------------------------------------------------------
@use 'sass:math';

// --------------------------------------------------------------------- General
$containerWidth: 85rem; // 1360px
$singleColumn: math.div($containerWidth, 12);

// --------------------------------------------------------------------- Colours
$gray50: #FAFAFA;
$gray100: #F5F5F5;
$gray200: #EEEEEE;
$gray300: #E0E0E0;
$gray400: #BDBDBD;
$gray500: #9E9E9E;
$gray600: #757575;
$gray700: #616161;
$gray800: #424242;
$gray900: #212121;

$gin: #EEF5F1;
$rangoonGreen: #1B1F12;
$emperor: #4F4F4F;
$grayNurse: #F1F3EF;
$tasman: #CED7C9;
$fuscousGray: #51504B;
$athensGray: #E7E9ED;
$capeCod: #3C4748;
$grayNurse2: #E0E7E0;
$dodgerBlue: #3DA2FF;

// ----------------------------------------------------------------- Breakpoints
$breakpoint_Tiny: 25.9375rem; // 415px
$breakpoint_Mini: 40rem; // 640px
$breakpoint_Small: 53.125rem; // 850px
$breakpoint_Medium: 64rem; // 1024px
$breakpoint_Large: 85rem; // 1360px
$breakpoint_Xlarge: 90rem; // 1440px
$breakpoint_UltraLarge: 140.625rem; // 2250px

// ------------------------------------------------------------------------ Misc
$borderRadius: 1.25rem;
$duration: 300ms;

// ------------------------ file item - gray background that looks like a button
@mixin fileItem() {
  display: inline-block;
  line-height: leading(21, 14);
  padding: 0.3125rem 0.625rem;
  border-radius: 1.25rem;
  background-color: #E7E9ED;
  @include fontWeight_Medium;
  @include fontSize_14;
  margin-right: 0.5625rem;
}

@mixin circleBorder {
  width: 2.1875rem;
  height: 2.1875rem;
  border-radius: 50%;
  border: solid 1px #DDDFE3;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  path {
    fill: $rangoonGreen;
  }
}

// ////////////////////////////////////////////////////////////////////// Mixins
// =============================================================================
// --------------------------------------------------------------------- Styling
@mixin centerImage {
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}

@mixin shadow1 { // nav
	box-shadow: 0px 4px 24px rgba(81, 130, 95, 0.15);
}

@mixin shadow2 { // cards
  box-shadow: 0px 4px 34px rgba(86, 106, 96, 0.25);
}

@mixin shadow3 { // searchbox
  box-shadow: 0px 4px 34px rgba(81, 86, 130, 0.25);
}

@mixin highlight {
  color: darkorange;
  font-weight: 600;
}

@mixin focusBoxShadow {
  box-shadow: 0 0 0 5px rgba(0, 123, 255, 0.5);
}

@mixin focusBoxShadowSmall {
  box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.5);
}

@mixin focusBoxShadowLink {
  box-shadow: 0 0 0 5px rgba(0, 123, 255, 0.5);
  border-radius: 0.125rem;
}

@mixin tooltipMobilePosition {
  &:hover {
    &:before,
    &:after {
      transform: translate(0, 0);
    }
  }
  &:before,
  &:after {
    transform: translate(0, 0.5rem);
  }
  &:before {
    left: 1rem;
  }
  &:after {
    left: 0.5rem;
  }
  &[data-tooltip-mobile-position="right"] {
    &:before,
    &:after {
      left: auto;
    }
    &:before {
      right: 1rem;
    }
    &:after {
      right: 0.5rem;
    }
  }
}

@mixin selection-dark {
  ::-moz-selection { background: white; color: $rangoonGreen; }
  ::selection { background: white; color: $rangoonGreen; }
}

@mixin selection-light {
  ::-moz-selection { background: $rangoonGreen; color: white; }
  ::selection { background: $rangoonGreen; color: white; }
}

// --------------------------------------------------------------------- General
@mixin transform($transforms) {
	   -moz-transform: $transforms;
	     -o-transform: $transforms;
	    -ms-transform: $transforms;
	-webkit-transform: $transforms;
          transform: $transforms;
}

@mixin transformOrigin($transformOrigin) {
	   -moz-transform-origin: $transformOrigin;
	     -o-transform-origin: $transformOrigin;
	    -ms-transform-origin: $transformOrigin;
	-webkit-transform-origin: $transformOrigin;
          transform-origin: $transformOrigin;
}

@mixin optional-at-root($sel) { @at-root #{if(not &, $sel, selector-append(&, $sel))} { @content; } }
@mixin placeholder {
  @include optional-at-root('::-webkit-input-placeholder') { @content; }
  @include optional-at-root(':-moz-placeholder') { @content; }
  @include optional-at-root('::-moz-placeholder') { @content; }
	@include optional-at-root(':-ms-input-placeholder') { @content; }
	@include optional-at-root('::-ms-input-placeholder') { @content; }
  @include optional-at-root('::placeholder') { @content; }
}

@mixin inputRange ($element) {
  @if ($element == 'thumb') {
    @include optional-at-root('::-webkit-slider-thumb') { @content; }
    @include optional-at-root('::-moz-range-thumb') { @content; }
  	@include optional-at-root('::-ms-thumb') { @content; }
  } @else if ($element == 'track') {
    @include optional-at-root('::-webkit-slider-runnable-track') { @content; }
    @include optional-at-root('::-moz-range-track') { @content; }
  	@include optional-at-root('::-ms-track') { @content; }
  }
}

// --------------------------------------------------------------- Media Queries
@mixin tiny { @media screen and (max-width: $breakpoint_Tiny) { @content; } }
@mixin mini { @media screen and (max-width: $breakpoint_Mini) { @content; } }
@mixin small { @media screen and (max-width: $breakpoint_Small) { @content; } }
@mixin medium { @media screen and (max-width: $breakpoint_Medium) { @content; } }
@mixin large { @media screen and (max-width: $breakpoint_Large) { @content; } }
@mixin xlarge { @media screen and (max-width: $breakpoint_Xlarge) { @content; } }
@mixin ultraLarge { @media screen and (max-width: $breakpoint_UltraLarge) { @content; } }

@mixin containerMaxMQ { @media screen and (max-width: $containerWidth) { @content; } }
@mixin containerMinMQ { @media screen and (max-width: $containerWidthPlusOnePixel) { @content; } }
@mixin customMaxMQ($width) { @media screen and (max-width: $width) { @content; } }
@mixin customMinMQ($width) { @media screen and (min-width: $width) { @content; } }

@mixin FireFox {
  @-moz-document url-prefix() { @content; }
}

@mixin Edge {
  @supports (-ms-ime-align:auto) { @content; }
}

@mixin Safari9 {
  @supports (overflow:-webkit-marquee) and (justify-content:inherit) { @content; }
}

@mixin Safari7Plus($item) {
  _::-webkit-full-page-media, _:future, :root #{$item} { @content; }
}

@mixin Safari9Plus($item) {
  _:default:not(:root:root), #{$item} { @content; }
}

@mixin IE10and11 {
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) { @content; }
}

@mixin iOSonly {
  @supports (-webkit-overflow-scrolling: touch) { @content; }
}

@mixin everythingExceptIOS {
  @supports not (-webkit-overflow-scrolling: touch) { @content; }
}

@function toRem($value) {
  $remValue: math.div($value, 16) + rem;
  @return $remValue;
}

@function vw($px-vw, $base-vw: 1360px) {
  @return math.div($px-vw * 100vw, $base-vw);
}

// ------------------------------------------------------------------- Animation
@mixin animation($animate...) {
  $max: length($animate);
  $animations: '';
  @for $i from 1 through $max {
    $animations: #{$animations + nth($animate, $i)};
    @if $i < $max { $animations: #{$animations + ", "}; }
  }
  -webkit-animation: $animations;
  -moz-animation:    $animations;
  -o-animation:      $animations;
  animation:         $animations;
}

@mixin animationName($animationName) { -webkit-animation-name: $animationName; animation-name: $animationName; } // string
@mixin animationDuration($animationDuration) { -webkit-animation-duration: $animationDuration; animation-duration: $animationDuration; } // num in ms or s
@mixin animationDirection($animationDirection) { -webkit-animation-direction: $animationDirection; animation-direction: $animationDirection; } // 'normal', 'reverse', 'alternate', 'alternate-reverse'
@mixin animationDelay($animationDelay) { -webkit-animation-delay: $animationDelay; animation-delay: $animationDelay; }
@mixin animationIterationCount($animationIterationCount) { -webkit-animation-iteration-count: $animationIterationCount; animation-iteration-count: $animationIterationCount; } // num or 'infinite'
@mixin animationTimingFunction($animationTimingFunction) { -webkit-animation-timing-function: $animationTimingFunction; animation-timing-function: $animationTimingFunction; } // bezier curve or 'linear'
@mixin animationFillMode($animationFillMode) { -webkit-animation-fill-mode: $animationFillMode; animation-fill-mode: $animationFillMode; } // forwards or backwards or both

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} { @content; }
  @-moz-keyframes #{$animationName} { @content; }
  @-o-keyframes #{$animationName} { @content; }
  @keyframes #{$animationName} { @content; }
}

@include keyframes(buttonBounce) {
	0% { transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  4.7% { transform: matrix3d(1.45, 0, 0, 0, 0, 1.45, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  9.41% { transform: matrix3d(1.883, 0, 0, 0, 0, 1.883, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  14.11% { transform: matrix3d(2.141, 0, 0, 0, 0, 2.141, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  18.72% { transform: matrix3d(2.212, 0, 0, 0, 0, 2.212, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  24.32% { transform: matrix3d(2.151, 0, 0, 0, 0, 2.151, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  29.93% { transform: matrix3d(2.048, 0, 0, 0, 0, 2.048, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  35.54% { transform: matrix3d(1.979, 0, 0, 0, 0, 1.979, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  41.04% { transform: matrix3d(1.961, 0, 0, 0, 0, 1.961, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  52.15% { transform: matrix3d(1.991, 0, 0, 0, 0, 1.991, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  63.26% { transform: matrix3d(2.007, 0, 0, 0, 0, 2.007, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  85.49% { transform: matrix3d(1.999, 0, 0, 0, 0, 1.999, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
  100% { transform: matrix3d(2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }
}

// ///////////////////////////////////////////////////////////////////// Imports
// =============================================================================
@import 'typography';
